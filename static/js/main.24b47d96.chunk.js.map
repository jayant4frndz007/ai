{"version":3,"sources":["logo.svg","components/header.js","components/main.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Fragment","className","src","alt","height","width","href","Component","Main","props","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toGMTString","document","cookie","axios","post","guest_type","guest_id","then","data","console","log","message","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","checkCookie","user","Math","floor","random","hideData","val","getElementById","style","display","showData","state","dataDisplay","hideshow","this","get","res","setState","backgroundColor","map","onMouseEnter","bind","service","onMouseLeave","logo_img","id","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.24b47d96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport '../css/myCss.css';\r\n\r\nexport default class Header extends Component{\r\n    render(){\r\n        return(<React.Fragment>\r\n            <div className=\"header\">\r\n               \r\n                <img src={'../images/Rectangle1.jpg'} alt=\"Header image cap\"/>\r\n                <img src={'../images/DAN_AGENCY.png'} alt=\"DAN image cap\" className=\"headerimg\" height=\"50px\" />\r\n                <img src={'../images/Vector_Smart_Object.png'} alt=\"subHeader\" className=\"subheaderimg\" height=\"500\" width=\"500\"/>\r\n                <div className=\"sidecontent\">\r\n                    <label>Get more from life with agency</label>\r\n                    <p>It is a long established fact that a reader will distracted by to the readable content of a page when</p>\r\n                    <button>Get Started</button>\r\n                </div>\r\n                <div className=\"headermenu\">\r\n                    <ul>\r\n                        <li><a href=\"\">Home</a></li>\r\n                        <li><a href=\"#\">About us</a></li>\r\n                        <li><a href=\"#\">Service</a></li>\r\n                        <li><a href=\"#\">Portfolio</a></li>\r\n                        <li><a href=\"#\">Blog</a></li>\r\n                        <li><a href=\"#\">Contact</a></li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"bubbles\">\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                       <div className=\"bubble\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../css/myCss.css';\r\nimport axios from 'axios';\r\n\r\nexport default class Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            dataDisplay:[],\r\n            hideshow:true\r\n        }\r\n        \r\n       \r\n    }\r\n    componentWillMount(){\r\n        console.log('will mount')\r\n        \r\n           this.checkCookie();\r\n    }\r\n    setCookie=(cname,cvalue,exdays)=>{\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n        var expires = \"expires=\" + d.toGMTString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n        axios.post('https://assignment-concerto.herokuapp.com/assignment/guest_hit',{\r\n    \r\n            guest_type :\"existing\",\r\n        \r\n            guest_id :cvalue\r\n        \r\n    \r\n    }).then((data)=>{\r\n        console.log('else',data.data.message,cvalue);\r\n    })\r\n    }\r\n    getCookie=(cname)=>{\r\n        var name = cname + \"=\";\r\n                var decodedCookie = decodeURIComponent(document.cookie);\r\n                var ca = decodedCookie.split(';');\r\n                for(var i = 0; i < ca.length; i++) {\r\n                    var c = ca[i];\r\n                    while (c.charAt(0) == ' ') {\r\n                    c = c.substring(1);\r\n                    }\r\n                    if (c.indexOf(name) == 0) {\r\n                    return c.substring(name.length, c.length);\r\n                    }\r\n                }\r\n                return \"\";\r\n    }\r\n    checkCookie=()=>{\r\n        var user=this.getCookie(\"user_id\");\r\n  if (user != \"\") {\r\n    console.log(\"Welcome again \" + user);\r\n    axios.post('https://assignment-concerto.herokuapp.com/assignment/guest_hit',{\r\n    \r\n            guest_type :\"new\",\r\n        \r\n            guest_id :user\r\n        \r\n    \r\n    }).then((data)=>{\r\n        console.log('if',data.data.message,user);\r\n    })\r\n  } else {\r\n     user = Math.floor(Math.random()*89999999999999 + 10000000000000);;\r\n     if (user != \"\" && user != null) {\r\n       this.setCookie(\"user_id\", user, 30);\r\n      \r\n     }\r\n  }\r\n}\r\n    \r\n    hideData=(val)=>{\r\n        document.getElementById(val).style.display='none';\r\n    }\r\n    showData=(val)=>{\r\n        document.getElementById(val).style.display='block';\r\n    }\r\n    componentDidMount(){\r\n\r\n        axios.get('https://assignment-concerto.herokuapp.com/assignment/services').then((res)=>{\r\n                console.log(res);\r\n                this.setState({dataDisplay:res.data});\r\n                \r\n        })\r\n            \r\n    }\r\n    \r\n    render(){\r\n        const data=[{name:\"jayant\",address:\"argora\"},{name:\"jayant\",address:\"argora\"},{name:\"jayant\",address:\"argora\"}]\r\n        return(<React.Fragment>\r\n            <div  style={{backgroundColor:'white'}}>\r\n                        <div className=\"main\">\r\n                            <div className=\"sidemain\">\r\n                            <label>Service we'r Provide?</label>\r\n                            <p>It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page </p>\r\n                                <div className=\"mainbtn\"><button className=\"btn\">Get Started</button></div>\r\n                            </div>\r\n                            <div className=\" boxdata\">\r\n                                {/* <div className=\"box\">a</div>\r\n                                <div className=\"box\">b</div>\r\n                                <div className=\"box\">c</div>\r\n                                <div className=\"box\">d</div> */}\r\n                                {this.state.dataDisplay.map((data)=>{\r\n                                    return <div >\r\n                                    <div className=\"card card1\" onMouseEnter={this.hideData.bind(this,data.service)} onMouseLeave={this.showData.bind(this,data.service)}>\r\n                                    <div className=\"card-body\" >\r\n                                            <img className=\"card-img-top\" src={(data.logo_img)} alt=\"Card image cap\" />\r\n                                           <br/>\r\n                                           <br/>\r\n                                           <br/>\r\n                                                <h3 className=\"card-text textdisplay\" id={data.service}>{this.state.hideshow && data.service}</h3>\r\n                                                <br/>\r\n                                                <br/>\r\n                                                <p>It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page</p>\r\n                                             </div>\r\n                                    </div>\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                               \r\n                        </div>\r\n                        <div className=\"main1\">\r\n                                <img src=\"../images/undraw_developer_activity_bv83.png\" alt=\"main1\" height=\"350\" width=\"650\"/>\r\n                                <div className=\"main1content\">\r\n                                    <label>Dan Agency give you Best business solution</label>\r\n                                    <p>It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page when. It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page.\r\n                                        It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page.\r\n                                     </p>\r\n                                     <p>It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page</p>\r\n\r\n                                        <button className=\"btn\" >View More</button>\r\n                                </div>\r\n                        </div>\r\n            </div>\r\n            <div className=\"teamheader\">\r\n                <img src=\"../images/Rectangle_6.png\" alt=\"teams\" />\r\n                <div className=\"team\">\r\n                    <div className=\"teamin\">\r\n                    <label>100+</label>\r\n                    <p>Clients</p>\r\n                    </div>\r\n\r\n                    <div className=\"teamin\">\r\n                    <label>250+</label>\r\n                    <p>Project Completed</p>\r\n                    </div>\r\n\r\n                    <div className=\"teamin\">\r\n                    <label>100+</label>\r\n                    <p>Satisfied Clients</p>\r\n                    </div>\r\n\r\n                    <div className=\"teamin\">\r\n                    <label>100+</label>\r\n                    <p>Awards</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"work\">\r\n               <label>Work we have done</label>\r\n               <br/>\r\n               <p>It is a long established fact that a render will be distracted by to\r\n                                        the readable content of the page that a render will be distracted by to\r\n                                        the readable content of the page</p>\r\n            </div>\r\n            <div className=\"imgseries\">\r\n                <div className=\"boxseries\">\r\n                <img src={\"../images/undraw_hiking_d24r.png\"} \r\n                />\r\n                </div>\r\n                <div className=\"boxseries\">\r\n                <img src={\"../images/undraw_fitness_tracker_3033.png\"} />\r\n                </div>\r\n                <div className=\"boxseries\">\r\n                <img src={\"../images/undraw_career_progress_ivdb.png\"} />\r\n                </div>\r\n                <div className=\"boxseries\">\r\n                <img src={\"../images/undraw_christmas_tree_56sw.png\"} />\r\n                </div>\r\n                     \r\n            </div>\r\n            <div className=\"btnpart\"><button className=\"btn\">See All</button></div>\r\n        </React.Fragment>)\r\n    }\r\n}","import React from 'react';\r\nimport '../css/myCss.css';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <React.Fragment>\r\n     <div className=\"footer\">\r\n        <img src=\"../images/Rectangle_10.jpg\" alt=\"footer\"/>\r\n        <div className=\"footerdata\">\r\n        <div className=\"data\">\r\n                \r\n                </div>\r\n                <div className=\"data\">\r\n                <img src={'../images/DAN_AGENCY.png'} alt=\"DAN image cap\"   />\r\n                \r\n                <p>Paid hill fine ten now love leaf.Supplied feeling mr of dissuable recurred no  it offering honounred\r\n                    Am of in collecting devonshire favourable excellence\r\n                </p>\r\n                </div>\r\n                <div className=\"data\">\r\n                    <h4>NEED HELP</h4>\r\n                    <ul className=\"uldata\">\r\n                        <li>Shipping & Return Policy</li>\r\n                        <li>Installation & Assembly</li>\r\n                        <li>Our Brochure</li>\r\n                        <li>help</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"data\">\r\n                    <h4>USEFUL LINK</h4>\r\n                    <ul className=\"uldata\">\r\n                        <li>Create Account</li>\r\n                        <li>Shopping Cart</li>\r\n                        <li>Privacy Policy</li>\r\n                        <li>Press Releases</li>\r\n                    </ul>\r\n                </div>\r\n                \r\n        </div>\r\n        </div>\r\n     \r\n     </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Main/>\n      <Footer/>\n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}